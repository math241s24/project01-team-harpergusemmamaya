[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "Proposal\n\nlibrary(readr)\nbob_ross &lt;- read_csv(\"data/bob_ross_paintings.csv\")\n\nNew names:\nRows: 403 Columns: 28\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): img_src, painting_title, youtube_src, colors, color_hex dbl (23): ...1,\npainting_index, season, episode, num_colors, Black_Gesso, Br...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n\nThe dataset we chose is a comprehensive collection of data about the paintings made by Bob Ross on his public television show. Each painting is an observation and the name of each painting is saved. Each paintings season and episode are recorded as well as a list of the colors used. Both the code for each color and the name for each color is documented. Some of the more commonly used colors were saved as variables with an indicator value of 1 or 0 showing whether or not that color was used. The number of unique or uncommon colors were recorded as well. The relative season of the painting was also documented in the dataset.\n\nWe’re using the bob ross dataset (https://github.com/jwilber/Bob_Ross_Paintings/blob/master/data/bob_ross_paintings.csv)\n\nWe chose to use this dataset because we’re fans of Bob Ross and curious about how systematic he may or may not be in his color use across seasons.\nThe two questions we want to answer are:\n\nHow does bob Ross’s color use change across time? Which colors are most popular in each season?\nWhich seasons have the most diverse color palettes? Which seasons have the most abundant color palettes?\n\nOur plans to answer each question are:\n\nMake a new variable combining season and episode using the mutate function. Make density plots/barplot for each color using that new time variable as the x-axis.\nUse the summarize function to count the average number of colors in each season, then use Simpson’s diversity index to measure how diverse the color palettes are:\n\nDiversity = 1 - sum(n(n-1)/N(N-1)), where: - n = # times a color is used - N = # times any color is used"
  },
  {
    "objectID": "presentation.html#introduction",
    "href": "presentation.html#introduction",
    "title": "Happy Accidents and Patterns",
    "section": "Introduction",
    "text": "Introduction\n\nOur project is based on the Bob Ross dataset!\n\nCatalogs the colors used in each painting across all 31 seasons\n\nWe will be using this data to investigate two questions:\n\nHow does Bob Ross’s color use change across time? Which colors are most popular in each season?\nWhich seasons have the most diverse color palettes? Which seasons have the most abundant color palettes?"
  },
  {
    "objectID": "presentation.html#question-1",
    "href": "presentation.html#question-1",
    "title": "Happy Accidents and Patterns",
    "section": "Question 1",
    "text": "Question 1\n\n\n\nBob Ross’s color use across seasons"
  },
  {
    "objectID": "presentation.html#question-1-1",
    "href": "presentation.html#question-1-1",
    "title": "Happy Accidents and Patterns",
    "section": "Question 1",
    "text": "Question 1\n\n\n\nBob Ross’s color use across seasons"
  },
  {
    "objectID": "presentation.html#question-2",
    "href": "presentation.html#question-2",
    "title": "Happy Accidents and Patterns",
    "section": "Question 2",
    "text": "Question 2\n\n\n\nSimpson’s Diversity across seasons"
  },
  {
    "objectID": "presentation.html#question-2-1",
    "href": "presentation.html#question-2-1",
    "title": "Happy Accidents and Patterns",
    "section": "Question 2",
    "text": "Question 2\n\n\n\nShannon’s Diversity across seasons"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project is for the first mini-project of Math/Stat 241 at Reed College, by Emma Campbell, Gus Compton, Maya Gutierrez, and Harper Lethin."
  },
  {
    "objectID": "Analysis.html",
    "href": "Analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "#Libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggridges)\nlibrary(vegan)\n\nLoading required package: permute\nLoading required package: lattice\nThis is vegan 2.6-4\n\n\n\nlibrary(readr)\nbob_ross &lt;- read_csv(\"data/bob_ross_paintings.csv\")\n\nNew names:\nRows: 403 Columns: 28\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): img_src, painting_title, youtube_src, colors, color_hex dbl (23): ...1,\npainting_index, season, episode, num_colors, Black_Gesso, Br...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nview(bob_ross)\n\n\nabundant_colors &lt;- bob_ross %&gt;%\n  group_by(season) %&gt;%\n  summarize(mean(num_colors))\nabundant_colors\n\n# A tibble: 31 × 2\n   season `mean(num_colors)`\n    &lt;dbl&gt;              &lt;dbl&gt;\n 1      1               7.08\n 2      2              11.2 \n 3      3               9.85\n 4      4              10   \n 5      5               8.54\n 6      6              10.5 \n 7      7               9.38\n 8      8              10.6 \n 9      9              10.8 \n10     10              11.4 \n# ℹ 21 more rows\n\n\n\nbob_ross_longer &lt;- bob_ross %&gt;%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"Color\", values_to = \"Used\") %&gt;%\n  filter(Used == 1) \n\n#there has to be a better way to do this \nhex_codes &lt;- data.frame(color = c(\"Alizarin_Crimson\", \"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\"), \n                        hex = c('#4E1500', '#000000', '#DB0000', '#8A3324', '#FFEC00', '#5F2E1F', '#FFB800', '#000000', '#FFFFFF', '#000000', '#0C0040', '#102E3C', '#021E44', '#0A3410', '#FFFFFF', '#221B15', '#C79B00'), \n                        hex_adjusted = c('#4E1500', '#828181', '#DB0000', '#8A3324', '#FFEC00', '#5F2E1F', '#FFB800', '#C9C8C8', '#D8F8FD', '#000000', '#3115AD', '#2281AD', '#064AA6', '#187525', '#FFFFFF', '#624428', '#C79B00')\n                        )\n\nhex_assign = c(\"Alizarin_Crimson\" = '#4E1500', \"Black_Gesso\" = '#828181', \"Bright_Red\" = '#DB0000', \"Burnt_Umber\" = '#8A3324', \"Cadmium_Yellow\" = '#FFEC00', \"Dark_Sienna\" = '#5F2E1F', \"Indian_Yellow\" = '#FFB800', \"Liquid_Black\" = '#C9C8C8', \"Liquid_Clear\" = '#D8F8FD', \"Midnight_Black\" = '#000000', \"Phthalo_Blue\" = '#3115AD', \"Phthalo_Green\" = '#2281AD', \"Prussian_Blue\" = '#064AA6', \"Sap_Green\" = '#187525', \"Titanium_White\" = '#FFFFFF', \"Van_Dyke_Brown\" = '#624428', \"Yellow_Ochre\" = '#C79B00')\n\ncolor_density &lt;- ggplot(data = bob_ross_longer, aes(x = season, y = Color, fill = Color)) +\n  geom_density_ridges(alpha = 0.7) +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme(legend.position = \"none\")\ncolor_density\n\nPicking joint bandwidth of 2.6\n\n\n\n\n\n\ncolor_density2 &lt;- ggplot(data = bob_ross_longer, aes(x = season, fill = Color)) +\n  geom_density(position= 'fill') +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme()#legend.position = \"none\")\ncolor_density2\n\nWarning: Groups with fewer than two data points have been dropped.\n\n\nWarning: Removed 1 rows containing missing values (`position_stack()`).\n\n\n\n\n\n\n#species diversity: 2 indices, Simpson and Shannon\n#Data wrangling:\ntidybob &lt;- bob_ross %&gt;%\n  select(c(painting_index, painting_title, season, Black_Gesso, Bright_Red, Burnt_Umber, Cadmium_Yellow, Dark_Sienna, Indian_Red, Indian_Yellow, Liquid_Black, Liquid_Clear, Midnight_Black, Phthalo_Blue, Phthalo_Green, Prussian_Blue, Sap_Green, Titanium_White, Van_Dyke_Brown, Yellow_Ochre, Alizarin_Crimson)) %&gt;%\n  drop_na() %&gt;%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"color\", values_to = \"count\")\n#simpson diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data &lt;- tidybob %&gt;%\n    filter(season == season_number) %&gt;%\n    group_by(color) %&gt;%\n    filter(count &gt; 0) %&gt;%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data &lt;- temp_data %&gt;%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate simpson diversity\n  simpsondiversity &lt;- diversity(temp_data$number, index = \"simpson\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\n#shannon diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data2 &lt;- tidybob %&gt;%\n    filter(season == season_number) %&gt;%\n    group_by(color) %&gt;%\n    filter(count &gt; 0) %&gt;%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data2 &lt;- temp_data2 %&gt;%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate shannon diversity\n  shannondiversity &lt;- diversity(temp_data2$number, index = \"shannon\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\nseasonno &lt;- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)\nsimpsond &lt;- c(0.8780718, 0.9190012, 0.9171143, 0.9195266, 0.917458, 0.9154412, 0.9187046, 0.9170342, 0.9180612, 0.9208364, 0.918457, 0.9237076, 0.9206671, 0.9240631, 0.9222083, 0.9203609, 0.9223511, 0.9223934, 0.9235672, 0.9208107, 0.927097, 0.9236437, 0.9233942, 0.9257509, 0.9232818, 0.9262543, 0.9280345, 0.9204545, 0.9241835, 0.9253637, 0.9246181)\nshannond &lt;- c(2.131576, 2.530038, 2.54985, 2.566073, 2.565492, 2.504565, 2.549228, 2.535804, 2.562325, 2.578084, 2.550194, 2.627699, 2.572248, 2.612864, 2.595449, 2.566761, 2.602236, 2.612732, 2.620094, 2.584851, 2.653685, 2.622077, 2.61255, 2.647941, 2.611549, 2.642795, 2.689755, 2.591084, 2.623845, 2.633915, 2.647335)\ndiversity_results &lt;- data.frame(seasonno, simpsond, shannond)\n\n\ndiversity_results %&gt;%\n  ggplot(aes(x = seasonno, y = simpsond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Simpson diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()\n\n\n\ndiversity_results %&gt;%\n  ggplot(aes(x = seasonno, y = shannond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Shannon diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()"
  },
  {
    "objectID": "Write-up.html",
    "href": "Write-up.html",
    "title": "Write-Up",
    "section": "",
    "text": "The”bob_ross_paintings” dataset we chose is a comprehensive collection of data about the paintings made by Bob Ross on his public television show. Each painting is an observation and the name of each painting is saved. Each painting’s season and episode are recorded as well as a list of the colors used. Both the code for each color and the name for each color is documented. A url is also included in each observation allowing those inspecting the data set to be able to inspect the paintings themselves.   Some of the more commonly used colors were saved as variables with an indicator value of 1 or 0 showing whether or not that color was used. The number of unique or uncommon colors were recorded as well. \n\n\nHow did Bob Ross’s color choices change over time?\n\n\nAs you all may know, Bob Ross made a total of 31 seasons. We wondered how consistent Bob Ross was over time. Were there colors that were used more frequently than others? Were there colors used commonly then not at all. All these questions could be answered by inspecting the distribution of common colors over time.\n\n\n\nWe decided that a density plot would answer our questions. Bob Ross’s most common colors were already defined and if they were present in a painting there was a binary indicator. We altered the data-set using the pivot_longer function. We made a new column that specified color with the color name as the value. Color essentially became a variable we could map. We put the color name on the y-axis and season number on the x-axis. We were able to see the distribution of each color over the course of 31 seasons.\n\n\n\n\n#Libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggridges)\nlibrary(vegan)\n\nLoading required package: permute\nLoading required package: lattice\nThis is vegan 2.6-4\n\nlibrary(readr)\n\nbob_ross &lt;- read_csv(\"data/bob_ross_paintings.csv\")\n\nNew names:\nRows: 403 Columns: 28\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): img_src, painting_title, youtube_src, colors, color_hex dbl (23): ...1,\npainting_index, season, episode, num_colors, Black_Gesso, Br...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nview(bob_ross)\n\nbob_ross_longer &lt;- bob_ross %&gt;%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"Color\", values_to = \"Used\") %&gt;%\n  filter(Used == 1) \nhex_assign = c(\"Alizarin_Crimson\" = '#4E1500', \"Black_Gesso\" = '#828181', \"Bright_Red\" = '#DB0000', \"Burnt_Umber\" = '#8A3324', \"Cadmium_Yellow\" = '#FFEC00', \"Dark_Sienna\" = '#5F2E1F', \"Indian_Yellow\" = '#FFB800', \"Liquid_Black\" = '#C9C8C8', \"Liquid_Clear\" = '#D8F8FD', \"Midnight_Black\" = '#000000', \"Phthalo_Blue\" = '#3115AD', \"Phthalo_Green\" = '#2281AD', \"Prussian_Blue\" = '#064AA6', \"Sap_Green\" = '#187525', \"Titanium_White\" = '#FFFFFF', \"Van_Dyke_Brown\" = '#624428', \"Yellow_Ochre\" = '#C79B00')\n\ncolor_density &lt;- ggplot(data = bob_ross_longer, aes(x = season, y = Color, fill = Color)) +\n  geom_density_ridges(alpha = 0.7) +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme(legend.position = \"none\")+\n  labs(title = \"Use of each color across all 31 seasons\")\ncolor_density\n\nPicking joint bandwidth of 2.6\n\n\n\n\n\n\ncolor_density2 &lt;- ggplot(data = bob_ross_longer, aes(x = season, fill = Color)) +\n  geom_density(position= 'fill') +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme()+#legend.position = \"none\")\n  labs(title = \"Palette proportions across all 31 seasons\")\ncolor_density2\n\nWarning: Groups with fewer than two data points have been dropped.\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nImmediately distributions of color usage were apparent with the density graphs. Both Burnt ember and Phthalo Green, for example, peaked between season 1 and 10. Prussian Blue and Liquid Black seemed to peak during the middle of seasons. Liquid Clear and Black Gresso were most used after season 15. Other colors were consistent through all the seasons; Yellow Ochre, Van Dyke Brown, Titanium White, Sapphire Green, Phthalo Blue, Indian Yellow, Cadmium Yellow, Bright Red, Alizarin Crimson. \nThe second plot, I believe, allowed us to compare the colors in relation to each other. Although both Burnt Ember and Phthalo Green peaked in their individual usage, Burnt Ember was objectively the most commonly used color at the time. Liquid clear not only peaked in the later seasons, but was used more often than other colors. Although the density graphs by color do support this assertion, this additional graph makes comparison much easier. \n\n\n\n\nWhich seasons have the most diverse color palettes? Which seasons have the most abundant color palettes?\n\n\nAfter inspecting the trends of color over time, we were intrigued by Bob Ross’s color use. Although we knew how individual color usage fluctuated over time, we wanted to know how the variety of colors changed over time as well.  \n\n\n\nWe decided on using two different methods for calculating diversity. We actually used indexes typically common with calculating species density in nature. \nThe first was the Simpson’s diversity index, which is a measure of diversity which takes into account the number of species present, as well as the relative abundance of each species. The inverse scale ranges from 0 to 1, where 1 represents infinite diversity and 0 represents no diversity.  \nThe second measure of diversity we used was the Shannon Diversity index, which is in terms of H. The higher the H, the higher the diversity of species in a particular community. The lower the value of H, the lower the diversity . A value of H=0 indicates that there is only one species in a community. The Shannon diversity index takes into account richness and evenness, which is slightly different from the Simpson’s diversity index. Typical ranges in this scale are between 1.5 and 3.5. \n\n\n\n\n#species diversity: 2 indices, Simpson and Shannon\n#Data wrangling:\ntidybob &lt;- bob_ross %&gt;%\n  select(c(painting_index, painting_title, season, Black_Gesso, Bright_Red, Burnt_Umber, Cadmium_Yellow, Dark_Sienna, Indian_Red, Indian_Yellow, Liquid_Black, Liquid_Clear, Midnight_Black, Phthalo_Blue, Phthalo_Green, Prussian_Blue, Sap_Green, Titanium_White, Van_Dyke_Brown, Yellow_Ochre, Alizarin_Crimson)) %&gt;%\n  drop_na() %&gt;%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"color\", values_to = \"count\")\n#simpson diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data &lt;- tidybob %&gt;%\n    filter(season == season_number) %&gt;%\n    group_by(color) %&gt;%\n    filter(count &gt; 0) %&gt;%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data &lt;- temp_data %&gt;%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate simpson diversity\n  simpsondiversity &lt;- diversity(temp_data$number, index = \"simpson\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\n#shannon diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data2 &lt;- tidybob %&gt;%\n    filter(season == season_number) %&gt;%\n    group_by(color) %&gt;%\n    filter(count &gt; 0) %&gt;%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data2 &lt;- temp_data2 %&gt;%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate shannon diversity\n  shannondiversity &lt;- diversity(temp_data2$number, index = \"shannon\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\nseasonno &lt;- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)\nsimpsond &lt;- c(0.8780718, 0.9190012, 0.9171143, 0.9195266, 0.917458, 0.9154412, 0.9187046, 0.9170342, 0.9180612, 0.9208364, 0.918457, 0.9237076, 0.9206671, 0.9240631, 0.9222083, 0.9203609, 0.9223511, 0.9223934, 0.9235672, 0.9208107, 0.927097, 0.9236437, 0.9233942, 0.9257509, 0.9232818, 0.9262543, 0.9280345, 0.9204545, 0.9241835, 0.9253637, 0.9246181)\nshannond &lt;- c(2.131576, 2.530038, 2.54985, 2.566073, 2.565492, 2.504565, 2.549228, 2.535804, 2.562325, 2.578084, 2.550194, 2.627699, 2.572248, 2.612864, 2.595449, 2.566761, 2.602236, 2.612732, 2.620094, 2.584851, 2.653685, 2.622077, 2.61255, 2.647941, 2.611549, 2.642795, 2.689755, 2.591084, 2.623845, 2.633915, 2.647335)\ndiversity_results &lt;- data.frame(seasonno, simpsond, shannond)\n\n\ndiversity_results %&gt;%\n  ggplot(aes(x = seasonno, y = simpsond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Simpson diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()\n\n\n\n\n\ndiversity_results %&gt;%\n  ggplot(aes(x = seasonno, y = shannond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Shannon diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()\n\n\n\n\n\n\n\nWe used the mutate function to calculate Simpson Diversity Index and Shannon Diversity Index values for each season. There was one point for every season. Looking at the two distinct graphs, both give the impression that color diversity increased over the 30 seasons. Both graphs have the lowest calculated diversity value for the first season and then ending at the higher end of the calculated diversity values. \nOne explanation from the sharp change after season 1 for diversity could be answered by our work in color distribution. Burnt Ember objectively was such a commonly used color in the earlier seasons. The lessened use of Burnt Ember and increased use of other colors after the first few seasons can explain the apparent shift in color diversity over the course of 30 seasons."
  },
  {
    "objectID": "Write-up.html#introduction-1-2-paragraphs",
    "href": "Write-up.html#introduction-1-2-paragraphs",
    "title": "Write-Up",
    "section": "",
    "text": "The”bob_ross_paintings” dataset we chose is a comprehensive collection of data about the paintings made by Bob Ross on his public television show. Each painting is an observation and the name of each painting is saved. Each painting’s season and episode are recorded as well as a list of the colors used. Both the code for each color and the name for each color is documented. A url is also included in each observation allowing those inspecting the data set to be able to inspect the paintings themselves.   Some of the more commonly used colors were saved as variables with an indicator value of 1 or 0 showing whether or not that color was used. The number of unique or uncommon colors were recorded as well. \n\n\nHow did Bob Ross’s color choices change over time?\n\n\nAs you all may know, Bob Ross made a total of 31 seasons. We wondered how consistent Bob Ross was over time. Were there colors that were used more frequently than others? Were there colors used commonly then not at all. All these questions could be answered by inspecting the distribution of common colors over time.\n\n\n\nWe decided that a density plot would answer our questions. Bob Ross’s most common colors were already defined and if they were present in a painting there was a binary indicator. We altered the data-set using the pivot_longer function. We made a new column that specified color with the color name as the value. Color essentially became a variable we could map. We put the color name on the y-axis and season number on the x-axis. We were able to see the distribution of each color over the course of 31 seasons.\n\n\n\n\n#Libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggridges)\nlibrary(vegan)\n\nLoading required package: permute\nLoading required package: lattice\nThis is vegan 2.6-4\n\nlibrary(readr)\n\nbob_ross &lt;- read_csv(\"data/bob_ross_paintings.csv\")\n\nNew names:\nRows: 403 Columns: 28\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): img_src, painting_title, youtube_src, colors, color_hex dbl (23): ...1,\npainting_index, season, episode, num_colors, Black_Gesso, Br...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nview(bob_ross)\n\nbob_ross_longer &lt;- bob_ross %&gt;%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"Color\", values_to = \"Used\") %&gt;%\n  filter(Used == 1) \nhex_assign = c(\"Alizarin_Crimson\" = '#4E1500', \"Black_Gesso\" = '#828181', \"Bright_Red\" = '#DB0000', \"Burnt_Umber\" = '#8A3324', \"Cadmium_Yellow\" = '#FFEC00', \"Dark_Sienna\" = '#5F2E1F', \"Indian_Yellow\" = '#FFB800', \"Liquid_Black\" = '#C9C8C8', \"Liquid_Clear\" = '#D8F8FD', \"Midnight_Black\" = '#000000', \"Phthalo_Blue\" = '#3115AD', \"Phthalo_Green\" = '#2281AD', \"Prussian_Blue\" = '#064AA6', \"Sap_Green\" = '#187525', \"Titanium_White\" = '#FFFFFF', \"Van_Dyke_Brown\" = '#624428', \"Yellow_Ochre\" = '#C79B00')\n\ncolor_density &lt;- ggplot(data = bob_ross_longer, aes(x = season, y = Color, fill = Color)) +\n  geom_density_ridges(alpha = 0.7) +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme(legend.position = \"none\")+\n  labs(title = \"Use of each color across all 31 seasons\")\ncolor_density\n\nPicking joint bandwidth of 2.6\n\n\n\n\n\n\ncolor_density2 &lt;- ggplot(data = bob_ross_longer, aes(x = season, fill = Color)) +\n  geom_density(position= 'fill') +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme()+#legend.position = \"none\")\n  labs(title = \"Palette proportions across all 31 seasons\")\ncolor_density2\n\nWarning: Groups with fewer than two data points have been dropped.\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nImmediately distributions of color usage were apparent with the density graphs. Both Burnt ember and Phthalo Green, for example, peaked between season 1 and 10. Prussian Blue and Liquid Black seemed to peak during the middle of seasons. Liquid Clear and Black Gresso were most used after season 15. Other colors were consistent through all the seasons; Yellow Ochre, Van Dyke Brown, Titanium White, Sapphire Green, Phthalo Blue, Indian Yellow, Cadmium Yellow, Bright Red, Alizarin Crimson. \nThe second plot, I believe, allowed us to compare the colors in relation to each other. Although both Burnt Ember and Phthalo Green peaked in their individual usage, Burnt Ember was objectively the most commonly used color at the time. Liquid clear not only peaked in the later seasons, but was used more often than other colors. Although the density graphs by color do support this assertion, this additional graph makes comparison much easier. \n\n\n\n\nWhich seasons have the most diverse color palettes? Which seasons have the most abundant color palettes?\n\n\nAfter inspecting the trends of color over time, we were intrigued by Bob Ross’s color use. Although we knew how individual color usage fluctuated over time, we wanted to know how the variety of colors changed over time as well.  \n\n\n\nWe decided on using two different methods for calculating diversity. We actually used indexes typically common with calculating species density in nature. \nThe first was the Simpson’s diversity index, which is a measure of diversity which takes into account the number of species present, as well as the relative abundance of each species. The inverse scale ranges from 0 to 1, where 1 represents infinite diversity and 0 represents no diversity.  \nThe second measure of diversity we used was the Shannon Diversity index, which is in terms of H. The higher the H, the higher the diversity of species in a particular community. The lower the value of H, the lower the diversity . A value of H=0 indicates that there is only one species in a community. The Shannon diversity index takes into account richness and evenness, which is slightly different from the Simpson’s diversity index. Typical ranges in this scale are between 1.5 and 3.5. \n\n\n\n\n#species diversity: 2 indices, Simpson and Shannon\n#Data wrangling:\ntidybob &lt;- bob_ross %&gt;%\n  select(c(painting_index, painting_title, season, Black_Gesso, Bright_Red, Burnt_Umber, Cadmium_Yellow, Dark_Sienna, Indian_Red, Indian_Yellow, Liquid_Black, Liquid_Clear, Midnight_Black, Phthalo_Blue, Phthalo_Green, Prussian_Blue, Sap_Green, Titanium_White, Van_Dyke_Brown, Yellow_Ochre, Alizarin_Crimson)) %&gt;%\n  drop_na() %&gt;%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"color\", values_to = \"count\")\n#simpson diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data &lt;- tidybob %&gt;%\n    filter(season == season_number) %&gt;%\n    group_by(color) %&gt;%\n    filter(count &gt; 0) %&gt;%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data &lt;- temp_data %&gt;%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate simpson diversity\n  simpsondiversity &lt;- diversity(temp_data$number, index = \"simpson\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\n#shannon diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data2 &lt;- tidybob %&gt;%\n    filter(season == season_number) %&gt;%\n    group_by(color) %&gt;%\n    filter(count &gt; 0) %&gt;%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data2 &lt;- temp_data2 %&gt;%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate shannon diversity\n  shannondiversity &lt;- diversity(temp_data2$number, index = \"shannon\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\nseasonno &lt;- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)\nsimpsond &lt;- c(0.8780718, 0.9190012, 0.9171143, 0.9195266, 0.917458, 0.9154412, 0.9187046, 0.9170342, 0.9180612, 0.9208364, 0.918457, 0.9237076, 0.9206671, 0.9240631, 0.9222083, 0.9203609, 0.9223511, 0.9223934, 0.9235672, 0.9208107, 0.927097, 0.9236437, 0.9233942, 0.9257509, 0.9232818, 0.9262543, 0.9280345, 0.9204545, 0.9241835, 0.9253637, 0.9246181)\nshannond &lt;- c(2.131576, 2.530038, 2.54985, 2.566073, 2.565492, 2.504565, 2.549228, 2.535804, 2.562325, 2.578084, 2.550194, 2.627699, 2.572248, 2.612864, 2.595449, 2.566761, 2.602236, 2.612732, 2.620094, 2.584851, 2.653685, 2.622077, 2.61255, 2.647941, 2.611549, 2.642795, 2.689755, 2.591084, 2.623845, 2.633915, 2.647335)\ndiversity_results &lt;- data.frame(seasonno, simpsond, shannond)\n\n\ndiversity_results %&gt;%\n  ggplot(aes(x = seasonno, y = simpsond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Simpson diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()\n\n\n\n\n\ndiversity_results %&gt;%\n  ggplot(aes(x = seasonno, y = shannond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Shannon diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()\n\n\n\n\n\n\n\nWe used the mutate function to calculate Simpson Diversity Index and Shannon Diversity Index values for each season. There was one point for every season. Looking at the two distinct graphs, both give the impression that color diversity increased over the 30 seasons. Both graphs have the lowest calculated diversity value for the first season and then ending at the higher end of the calculated diversity values. \nOne explanation from the sharp change after season 1 for diversity could be answered by our work in color distribution. Burnt Ember objectively was such a commonly used color in the earlier seasons. The lessened use of Burnt Ember and increased use of other colors after the first few seasons can explain the apparent shift in color diversity over the course of 30 seasons."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Project Write-up",
    "section": "",
    "text": "Your write-up should consist of three parts:\n\n\nBrief introduction to the dataset. You may repeat some of the information about the dataset provided in the introduction to the dataset on the TidyTuesday repository, for instance. Imagine that your project is a standalone document and the grader has no prior knowledge of the dataset.\n\n\nThe title should relate to the question you’re answering.\n\n\nIntroduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you’re interested in this question.\n\n\n\nDescribe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g. boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.\n\n\n\nIn this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with ggplot2. Do not use base R or lattice plotting functions.\n\n\n\nIn the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.\n\n\n\n\nSame structure outlined for Question 1, but for your new question. And the title should relate to the question you’re answering.\nWe encourage you to be concise. A paragraph should typically not be longer than 5 sentences.\nYou are not required to perform any statistical tests in this project, but you may do so if you find it helpful to answer your question."
  },
  {
    "objectID": "index.html#introduction-1-2-paragraphs",
    "href": "index.html#introduction-1-2-paragraphs",
    "title": "Project Write-up",
    "section": "",
    "text": "Brief introduction to the dataset. You may repeat some of the information about the dataset provided in the introduction to the dataset on the TidyTuesday repository, for instance. Imagine that your project is a standalone document and the grader has no prior knowledge of the dataset.\n\n\nThe title should relate to the question you’re answering.\n\n\nIntroduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you’re interested in this question.\n\n\n\nDescribe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g. boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.\n\n\n\nIn this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with ggplot2. Do not use base R or lattice plotting functions.\n\n\n\nIn the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.\n\n\n\n\nSame structure outlined for Question 1, but for your new question. And the title should relate to the question you’re answering.\nWe encourage you to be concise. A paragraph should typically not be longer than 5 sentences.\nYou are not required to perform any statistical tests in this project, but you may do so if you find it helpful to answer your question."
  }
]