{
  "hash": "198f3fa80113c25d7e630e8a9a6045bc",
  "result": {
    "markdown": "---\ntitle: \"Analysis\"\noutput: html_document\ndate: \"2024-03-03\"\nmessage: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Libraries\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggridges)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nbob_ross <- read_csv(\"data/bob_ross_paintings.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 403 Columns: 28\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): img_src, painting_title, youtube_src, colors, color_hex dbl (23): ...1,\npainting_index, season, episode, num_colors, Black_Gesso, Br...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nview(bob_ross)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nabundant_colors <- bob_ross %>%\n  group_by(season) %>%\n  summarize(mean(num_colors))\nabundant_colors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 31 × 2\n   season `mean(num_colors)`\n    <dbl>              <dbl>\n 1      1               7.08\n 2      2              11.2 \n 3      3               9.85\n 4      4              10   \n 5      5               8.54\n 6      6              10.5 \n 7      7               9.38\n 8      8              10.6 \n 9      9              10.8 \n10     10              11.4 \n# ℹ 21 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbob_ross_longer <- bob_ross %>%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"Color\", values_to = \"Used\") %>%\n  filter(Used == 1)\n\n#there has to be a better way to do this \nhex_codes <- data.frame(color = c(\"Alizarin_Crimson\", \"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\"), \n                        hex = '#4E1500', '#000000', '#DB0000', '#8A3324', '#FFEC00' )\n\ncolor_density <- ggplot(data = bob_ross_longer, aes(x = season, y = Color, fill = Color)) +\n  geom_density_ridges(alpha = 0.4)\ncolor_density\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPicking joint bandwidth of 2.6\n```\n:::\n\n::: {.cell-output-display}\n![](Analysis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}