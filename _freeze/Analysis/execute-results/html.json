{
  "hash": "b74fd88158b4c33706f045a67566b126",
  "result": {
    "markdown": "---\ntitle: \"Analysis\"\noutput: \n  html_document:\n    keep_md: yes\ndate: \"2024-03-03\"\nmessage: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Libraries\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggridges)\nlibrary(vegan)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: permute\nLoading required package: lattice\nThis is vegan 2.6-4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nbob_ross <- read_csv(\"data/bob_ross_paintings.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 403 Columns: 28\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): img_src, painting_title, youtube_src, colors, color_hex dbl (23): ...1,\npainting_index, season, episode, num_colors, Black_Gesso, Br...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nview(bob_ross)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nabundant_colors <- bob_ross %>%\n  group_by(season) %>%\n  summarize(mean(num_colors))\nabundant_colors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 31 × 2\n   season `mean(num_colors)`\n    <dbl>              <dbl>\n 1      1               7.08\n 2      2              11.2 \n 3      3               9.85\n 4      4              10   \n 5      5               8.54\n 6      6              10.5 \n 7      7               9.38\n 8      8              10.6 \n 9      9              10.8 \n10     10              11.4 \n# ℹ 21 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbob_ross_longer <- bob_ross %>%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"Color\", values_to = \"Used\") %>%\n  filter(Used == 1) \n\n#there has to be a better way to do this \nhex_codes <- data.frame(color = c(\"Alizarin_Crimson\", \"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\"), \n                        hex = c('#4E1500', '#000000', '#DB0000', '#8A3324', '#FFEC00', '#5F2E1F', '#FFB800', '#000000', '#FFFFFF', '#000000', '#0C0040', '#102E3C', '#021E44', '#0A3410', '#FFFFFF', '#221B15', '#C79B00'), \n                        hex_adjusted = c('#4E1500', '#828181', '#DB0000', '#8A3324', '#FFEC00', '#5F2E1F', '#FFB800', '#C9C8C8', '#D8F8FD', '#000000', '#3115AD', '#2281AD', '#064AA6', '#187525', '#FFFFFF', '#624428', '#C79B00')\n                        )\n\nhex_assign = c(\"Alizarin_Crimson\" = '#4E1500', \"Black_Gesso\" = '#828181', \"Bright_Red\" = '#DB0000', \"Burnt_Umber\" = '#8A3324', \"Cadmium_Yellow\" = '#FFEC00', \"Dark_Sienna\" = '#5F2E1F', \"Indian_Yellow\" = '#FFB800', \"Liquid_Black\" = '#C9C8C8', \"Liquid_Clear\" = '#D8F8FD', \"Midnight_Black\" = '#000000', \"Phthalo_Blue\" = '#3115AD', \"Phthalo_Green\" = '#2281AD', \"Prussian_Blue\" = '#064AA6', \"Sap_Green\" = '#187525', \"Titanium_White\" = '#FFFFFF', \"Van_Dyke_Brown\" = '#624428', \"Yellow_Ochre\" = '#C79B00')\n\ncolor_density <- ggplot(data = bob_ross_longer, aes(x = season, y = Color, fill = Color)) +\n  geom_density_ridges(alpha = 0.7) +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme(legend.position = \"none\")\ncolor_density\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPicking joint bandwidth of 2.6\n```\n:::\n\n::: {.cell-output-display}\n![](Analysis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_density2 <- ggplot(data = bob_ross_longer, aes(x = season, fill = Color)) +\n  geom_density(position= 'fill') +\n  scale_fill_manual(values = hex_assign) +\n  theme_classic() +\n  theme()#legend.position = \"none\")\ncolor_density2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Groups with fewer than two data points have been dropped.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`position_stack()`).\n```\n:::\n\n::: {.cell-output-display}\n![](Analysis_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#species diversity: 2 indices, Simpson and Shannon\n#Data wrangling:\ntidybob <- bob_ross %>%\n  select(c(painting_index, painting_title, season, Black_Gesso, Bright_Red, Burnt_Umber, Cadmium_Yellow, Dark_Sienna, Indian_Red, Indian_Yellow, Liquid_Black, Liquid_Clear, Midnight_Black, Phthalo_Blue, Phthalo_Green, Prussian_Blue, Sap_Green, Titanium_White, Van_Dyke_Brown, Yellow_Ochre, Alizarin_Crimson)) %>%\n  drop_na() %>%\n  pivot_longer(c(\"Black_Gesso\", \"Bright_Red\", \"Burnt_Umber\", \"Cadmium_Yellow\", \"Dark_Sienna\", \"Indian_Red\", \"Indian_Yellow\", \"Liquid_Black\", \"Liquid_Clear\", \"Midnight_Black\", \"Phthalo_Blue\", \"Phthalo_Green\", \"Prussian_Blue\", \"Sap_Green\", \"Titanium_White\", \"Van_Dyke_Brown\", \"Yellow_Ochre\", \"Alizarin_Crimson\"), names_to = \"color\", values_to = \"count\")\n#simpson diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data <- tidybob %>%\n    filter(season == season_number) %>%\n    group_by(color) %>%\n    filter(count > 0) %>%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data <- temp_data %>%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate simpson diversity\n  simpsondiversity <- diversity(temp_data$number, index = \"simpson\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\n#shannon diversity index\nfor (season_number in 1:31) {\n  # Filter data for each season\n  temp_data2 <- tidybob %>%\n    filter(season == season_number) %>%\n    group_by(color) %>%\n    filter(count > 0) %>%\n    summarize(number = n())\n  \n  # Calculate proportion\n  temp_data2 <- temp_data2 %>%\n    mutate(proportion = number/sum(number))\n  \n  #Calculate shannon diversity\n  shannondiversity <- diversity(temp_data2$number, index = \"shannon\", equalize.groups = FALSE,\n                      MARGIN = 1, base = exp(1))\n}\n\nseasonno <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)\nsimpsond <- c(0.8780718, 0.9190012, 0.9171143, 0.9195266, 0.917458, 0.9154412, 0.9187046, 0.9170342, 0.9180612, 0.9208364, 0.918457, 0.9237076, 0.9206671, 0.9240631, 0.9222083, 0.9203609, 0.9223511, 0.9223934, 0.9235672, 0.9208107, 0.927097, 0.9236437, 0.9233942, 0.9257509, 0.9232818, 0.9262543, 0.9280345, 0.9204545, 0.9241835, 0.9253637, 0.9246181)\nshannond <- c(2.131576, 2.530038, 2.54985, 2.566073, 2.565492, 2.504565, 2.549228, 2.535804, 2.562325, 2.578084, 2.550194, 2.627699, 2.572248, 2.612864, 2.595449, 2.566761, 2.602236, 2.612732, 2.620094, 2.584851, 2.653685, 2.622077, 2.61255, 2.647941, 2.611549, 2.642795, 2.689755, 2.591084, 2.623845, 2.633915, 2.647335)\ndiversity_results <- data.frame(seasonno, simpsond, shannond)\n\n\ndiversity_results %>%\n  ggplot(aes(x = seasonno, y = simpsond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Simpson diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](Analysis_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndiversity_results %>%\n  ggplot(aes(x = seasonno, y = shannond)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Season\", y = \"Shannon diversity index\", title = \"Species diversity of colors in Bob Ross paintings over time\") +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](Analysis_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}